# Generated by Django 3.1.5 on 2021-02-07 20:20

import application.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Wall',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('date_of_creation', models.DateTimeField(auto_now_add=True, verbose_name='Date of creation')),
                ('last_update', models.DateTimeField(auto_now=True, verbose_name='Date of last update (wall or any widget)')),
                ('title', models.CharField(max_length=200, verbose_name='Wall title')),
                ('description', models.CharField(blank=True, max_length=500, null=True, verbose_name='Wall description')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='URL',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('date_of_creation', models.DateTimeField(auto_now_add=True, verbose_name='Date of creation')),
                ('last_update', models.DateTimeField(auto_now=True, verbose_name='Date of last update (wall or any widget)')),
                ('width', models.IntegerField(default=200, verbose_name='Widget width')),
                ('height', models.IntegerField(default=100, verbose_name='Widget height')),
                ('z_index', models.IntegerField(default=0, verbose_name='Widget z index(stack position)')),
                ('left', models.IntegerField(default=0, verbose_name='Offset left from parent')),
                ('top', models.IntegerField(default=0, verbose_name='Offset top from parent')),
                ('font_size', models.IntegerField(default=16, validators=[django.core.validators.MaxValueValidator(40), django.core.validators.MinValueValidator(8)], verbose_name='Widget font size')),
                ('font_weight', models.IntegerField(default=400, validators=[django.core.validators.MaxValueValidator(900), django.core.validators.MinValueValidator(100)], verbose_name='Widget font weight')),
                ('background_color', models.CharField(default='#ffffff', max_length=9, validators=[application.models.ColorValidator])),
                ('text_color', models.CharField(default='#000000', max_length=9, validators=[application.models.ColorValidator])),
                ('href', models.URLField(blank=True, null=True)),
                ('text', models.CharField(blank=True, max_length=100, null=True)),
                ('wall', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='application.wall')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SimpleText',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('date_of_creation', models.DateTimeField(auto_now_add=True, verbose_name='Date of creation')),
                ('last_update', models.DateTimeField(auto_now=True, verbose_name='Date of last update (wall or any widget)')),
                ('width', models.IntegerField(default=200, verbose_name='Widget width')),
                ('height', models.IntegerField(default=100, verbose_name='Widget height')),
                ('z_index', models.IntegerField(default=0, verbose_name='Widget z index(stack position)')),
                ('left', models.IntegerField(default=0, verbose_name='Offset left from parent')),
                ('top', models.IntegerField(default=0, verbose_name='Offset top from parent')),
                ('font_size', models.IntegerField(default=16, validators=[django.core.validators.MaxValueValidator(40), django.core.validators.MinValueValidator(8)], verbose_name='Widget font size')),
                ('font_weight', models.IntegerField(default=400, validators=[django.core.validators.MaxValueValidator(900), django.core.validators.MinValueValidator(100)], verbose_name='Widget font weight')),
                ('background_color', models.CharField(default='#ffffff', max_length=9, validators=[application.models.ColorValidator])),
                ('text_color', models.CharField(default='#000000', max_length=9, validators=[application.models.ColorValidator])),
                ('text_content', models.TextField(blank=True, max_length=2000, null=True, verbose_name='Text content of widget')),
                ('wall', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='application.wall')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SimpleList',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('date_of_creation', models.DateTimeField(auto_now_add=True, verbose_name='Date of creation')),
                ('last_update', models.DateTimeField(auto_now=True, verbose_name='Date of last update (wall or any widget)')),
                ('width', models.IntegerField(default=200, verbose_name='Widget width')),
                ('height', models.IntegerField(default=100, verbose_name='Widget height')),
                ('z_index', models.IntegerField(default=0, verbose_name='Widget z index(stack position)')),
                ('left', models.IntegerField(default=0, verbose_name='Offset left from parent')),
                ('top', models.IntegerField(default=0, verbose_name='Offset top from parent')),
                ('font_size', models.IntegerField(default=16, validators=[django.core.validators.MaxValueValidator(40), django.core.validators.MinValueValidator(8)], verbose_name='Widget font size')),
                ('font_weight', models.IntegerField(default=400, validators=[django.core.validators.MaxValueValidator(900), django.core.validators.MinValueValidator(100)], verbose_name='Widget font weight')),
                ('background_color', models.CharField(default='#ffffff', max_length=9, validators=[application.models.ColorValidator])),
                ('text_color', models.CharField(default='#000000', max_length=9, validators=[application.models.ColorValidator])),
                ('title', models.CharField(blank=True, max_length=100, null=True)),
                ('description', models.CharField(blank=True, max_length=200, null=True)),
                ('items', models.JSONField(default=list, validators=[application.models.SimpleListValidator(None)])),
                ('wall', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='application.wall')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RichText',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('date_of_creation', models.DateTimeField(auto_now_add=True, verbose_name='Date of creation')),
                ('last_update', models.DateTimeField(auto_now=True, verbose_name='Date of last update (wall or any widget)')),
                ('width', models.IntegerField(default=200, verbose_name='Widget width')),
                ('height', models.IntegerField(default=100, verbose_name='Widget height')),
                ('z_index', models.IntegerField(default=0, verbose_name='Widget z index(stack position)')),
                ('left', models.IntegerField(default=0, verbose_name='Offset left from parent')),
                ('top', models.IntegerField(default=0, verbose_name='Offset top from parent')),
                ('font_size', models.IntegerField(default=16, validators=[django.core.validators.MaxValueValidator(40), django.core.validators.MinValueValidator(8)], verbose_name='Widget font size')),
                ('font_weight', models.IntegerField(default=400, validators=[django.core.validators.MaxValueValidator(900), django.core.validators.MinValueValidator(100)], verbose_name='Widget font weight')),
                ('background_color', models.CharField(default='#ffffff', max_length=9, validators=[application.models.ColorValidator])),
                ('text_content', models.TextField(blank=True, null=True, verbose_name='Text content of widget')),
                ('show_source', models.BooleanField(default=True)),
                ('wall', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='application.wall')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Counter',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('date_of_creation', models.DateTimeField(auto_now_add=True, verbose_name='Date of creation')),
                ('last_update', models.DateTimeField(auto_now=True, verbose_name='Date of last update (wall or any widget)')),
                ('width', models.IntegerField(default=200, verbose_name='Widget width')),
                ('height', models.IntegerField(default=100, verbose_name='Widget height')),
                ('z_index', models.IntegerField(default=0, verbose_name='Widget z index(stack position)')),
                ('left', models.IntegerField(default=0, verbose_name='Offset left from parent')),
                ('top', models.IntegerField(default=0, verbose_name='Offset top from parent')),
                ('font_size', models.IntegerField(default=16, validators=[django.core.validators.MaxValueValidator(40), django.core.validators.MinValueValidator(8)], verbose_name='Widget font size')),
                ('font_weight', models.IntegerField(default=400, validators=[django.core.validators.MaxValueValidator(900), django.core.validators.MinValueValidator(100)], verbose_name='Widget font weight')),
                ('background_color', models.CharField(default='#ffffff', max_length=9, validators=[application.models.ColorValidator])),
                ('text_color', models.CharField(default='#000000', max_length=9, validators=[application.models.ColorValidator])),
                ('title', models.CharField(blank=True, max_length=200, null=True)),
                ('value', models.BigIntegerField(default=0)),
                ('wall', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='application.wall')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
