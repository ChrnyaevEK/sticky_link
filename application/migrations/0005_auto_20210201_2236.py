# Generated by Django 3.1.5 on 2021-02-01 22:36

import application.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('application', '0004_auto_20210201_2149'),
    ]

    operations = [
        migrations.RenameField(
            model_name='simpletext',
            old_name='font_color',
            new_name='text_color',
        ),
        migrations.AlterField(
            model_name='simpletext',
            name='text_content',
            field=models.TextField(blank=True, max_length=2000, null=True, verbose_name='Text content of widget'),
        ),
        migrations.CreateModel(
            name='URL',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('date_of_creation', models.DateTimeField(auto_now_add=True, verbose_name='Date of creation')),
                ('last_update', models.DateTimeField(auto_now=True, verbose_name='Date of last update (wall or any widget)')),
                ('width', models.IntegerField(default=200, validators=[django.core.validators.MinValueValidator(200), django.core.validators.MaxValueValidator(2000)], verbose_name='Widget width')),
                ('height', models.IntegerField(default=100, validators=[django.core.validators.MinValueValidator(100), django.core.validators.MaxValueValidator(2000)], verbose_name='Widget height')),
                ('left', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Offset left from parent')),
                ('top', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Offset top from parent')),
                ('background_color', models.CharField(choices=[('primary', 'Primary'), ('secondary', 'Secondary'), ('success', 'Success'), ('danger', 'Danger'), ('warning', 'Warning'), ('info', 'Info'), ('white', 'White'), ('black', 'White')], default='white', max_length=10)),
                ('text_color', models.CharField(choices=[('primary', 'Primary'), ('secondary', 'Secondary'), ('success', 'Success'), ('danger', 'Danger'), ('warning', 'Warning'), ('info', 'Info'), ('white', 'White'), ('black', 'White')], default='black', max_length=10)),
                ('href', models.URLField(blank=True, null=True)),
                ('wall', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='application.wall')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SimpleList',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('date_of_creation', models.DateTimeField(auto_now_add=True, verbose_name='Date of creation')),
                ('last_update', models.DateTimeField(auto_now=True, verbose_name='Date of last update (wall or any widget)')),
                ('width', models.IntegerField(default=200, validators=[django.core.validators.MinValueValidator(200), django.core.validators.MaxValueValidator(2000)], verbose_name='Widget width')),
                ('height', models.IntegerField(default=100, validators=[django.core.validators.MinValueValidator(100), django.core.validators.MaxValueValidator(2000)], verbose_name='Widget height')),
                ('left', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Offset left from parent')),
                ('top', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Offset top from parent')),
                ('background_color', models.CharField(choices=[('primary', 'Primary'), ('secondary', 'Secondary'), ('success', 'Success'), ('danger', 'Danger'), ('warning', 'Warning'), ('info', 'Info'), ('white', 'White'), ('black', 'White')], default='white', max_length=10)),
                ('text_color', models.CharField(choices=[('primary', 'Primary'), ('secondary', 'Secondary'), ('success', 'Success'), ('danger', 'Danger'), ('warning', 'Warning'), ('info', 'Info'), ('white', 'White'), ('black', 'White')], default='black', max_length=10)),
                ('title', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=200)),
                ('items', models.JSONField(default=list, validators=[application.models.SimpleListValidator(None)])),
                ('wall', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='application.wall')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RichText',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('date_of_creation', models.DateTimeField(auto_now_add=True, verbose_name='Date of creation')),
                ('last_update', models.DateTimeField(auto_now=True, verbose_name='Date of last update (wall or any widget)')),
                ('width', models.IntegerField(default=200, validators=[django.core.validators.MinValueValidator(200), django.core.validators.MaxValueValidator(2000)], verbose_name='Widget width')),
                ('height', models.IntegerField(default=100, validators=[django.core.validators.MinValueValidator(100), django.core.validators.MaxValueValidator(2000)], verbose_name='Widget height')),
                ('left', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Offset left from parent')),
                ('top', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Offset top from parent')),
                ('background_color', models.CharField(choices=[('primary', 'Primary'), ('secondary', 'Secondary'), ('success', 'Success'), ('danger', 'Danger'), ('warning', 'Warning'), ('info', 'Info'), ('white', 'White'), ('black', 'White')], default='white', max_length=10)),
                ('text_content', models.TextField(blank=True, max_length=2000, null=True, verbose_name='Text content of widget')),
                ('show_source', models.BooleanField(default=True)),
                ('wall', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='application.wall')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
