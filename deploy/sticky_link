upstream django {
    server unix:///var/www/sticky_link/deploy/sticky_link.sock;
}
upstream django_channels {
 server localhost:9001;
}

server {
    server_name sticky-link.com;
    return 301 $scheme://www.sticky-link.com$request_uri;
}

# configuration of the server
server {
    server_name app.sticky-link.com;
    charset     utf-8;
    client_max_body_size 100M;

    # Django media
    # location /media  {
        # alias /path/to/your/mysite/media;
    # }

    location ~ ^/static/(.*)$ {
        root /var/www/sticky_link;
        try_files /static/$1 /templates/application/dist/static/$1 =404;
    }

    location ~ ^/media/(.*)$ {
        internal;
        root   /var/www/sticky_link;
    }

    location / {
        uwsgi_pass  django;
        include     /var/www/sticky_link/deploy/uwsgi_params;
    }

    location /wss/ {
        proxy_pass http://django_channels;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_read_timeout 86400;
        proxy_connect_timeout 75s;
        proxy_buffers 8 32k;
        proxy_buffer_size 64k;
    }


    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/app.sticky-link.com/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/app.sticky-link.com/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}

server {
    if ($host = app.sticky-link.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    server_name app.sticky-link.com;
    listen 80;
    return 404; # managed by Certbot


}